<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <title>Profile</title>
  <meta content="width=device-width, initial-scale=1" name="viewport">
  <link href="css/styles.css" rel="stylesheet" type="text/css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
</head>

<body class="user-body">
  {{> mobileHeader}}

  <div class="sidebar">
    <div class="sidebar-logo-wrapper">
      <a href="/" class="sidebar-logo-link">
        <img src="images/logo2.png" loading="lazy" alt="Logo" class="sidebar-logo"></a>
    </div>
    <div class="nav-divider-basics nav-divider-top"></div>
    <a id="Profile" href="/profile" class="page-link w-inline-block">
      <img loading="lazy" src="images/user.svg" alt="Icon" class="nav-icon">
      <div class="page-link-text-block"><span class="page-link-text-span">Profile</span></div>
    </a>
    <a id="Upload" href="/upload" class="page-link w-inline-block w--current">
      <img src="images/file-text.svg" loading="lazy" alt="Icon" class="nav-icon">
      <div class="page-link-text-block"><span class="page-link-text-span">Upload</span></div>
    </a>
    <a id="Reports" href="/reports" aria-current="page" class="page-link w-inline-block"><img src="images/clipboard.svg"
        loading="lazy" alt="Icon" class="nav-icon">
      <div class="page-link-text-block"><span class="page-link-text-span">Reports</span></div>
    </a>
    <a id="Dashboard" href="/dashboard" class="page-link w-inline-block">
      <img src="images/layout.svg" loading="lazy" alt="Icon" class="nav-icon">
      <div class="page-link-text-block"><span class="page-link-text-span">Dashboard</span></div>
    </a>
    <div class="nav-divider-basics nav-divider-bottom"></div>
    <a href="/how-it-works" class="page-link w-inline-block"><img src="images/help-circle.svg" loading="lazy" alt="Icon"
        class="nav-icon">
      <div class="page-link-text-block"><span class="page-link-text-span">Help</span></div>
    </a>
    <a id="Log-out" href="/" class="page-link w-inline-block"><img src="images/unlock.svg" loading="lazy" alt="Icon"
        class="nav-icon">
      <div class="page-link-text-block"><span class="page-link-text-span">Log out</span></div>
    </a>
    <div class="sidebar-bottom-spacer"></div>
  </div>

  <section class="demo-header">
    <div class="header-container-2">
      <div>
        <h2 class="heading2">Upload Your Data</h2>
        <h3 class="subheading"></h3>
        <div class="spacer-block"></div>
      </div>
    </div>
  </section>

  <div class="dashboard-content">
    <div class="dashboard-container">

      <div class="w-layout-grid main-grid">
        <div data-duration-in="300" data-duration-out="100" data-current="All projects" data-easing="ease"
          class="tabs w-tabs">
          <div class="in-page-menu w-tab-menu">
            <a data-w-tab="Uploads" class="in-page-link w-inline-block w-tab-link w--current">
              <div class="text-block-4">File Uploads</div>
            </a>
            <a data-w-tab="Output" class="in-page-link w-inline-block w-tab-link">
              <div class="text-block-5">File Output</div>
            </a>
          </div>

          <div class="labs-content w-tab-content">
            <div data-w-tab="Uploads" class="tab-pane-basic-info w-tab-pane w--tab-active">
              <div class="dropdown-wrapper user-content-bg">
                <div class="div-block-9">
                  <div class="upload-page-text">HealthLync extracts data from your bloodwork/lab files automatically.
                  </div>
                  {{!-- Upload container --}}
                  <div class="file-upload-container">
                    <div class="file-upload-area" id="dropZone">
                      <input type="file" id="fileInput" multiple accept=".pdf,.jpg,.jpeg,.png" class="file-input" />
                      <div class="upload-content">
                        <div class="upload-text">Drag and drop files here</div>
                        <button class="browse-button">Browse files</button>
                        {{> svg/upload }}
                        <div class="file-limits">Limit 200MB per file • PDF, JPEG, PNG</div>
                      </div>
                    </div>
                    <div id="fileList" class="file-list"></div>
                    <button id="processFiles" class="process-button" disabled>Upload File(s)</button>
                  </div>
                  <div class="upload-page-text2">Supported file types:
                    <li>PDFs</li>
                    <li>Photos &amp; Images (JPEG
                      and PNG)</li>... More to come
                  </div>

                  <div class="upload-page-text">Uploaded documents:</div>
                  <div class="file-list-header">
                    <div class="file-list-title">Name</div>
                    <div class="file-list-title">Date</div>
                    <div class="file-list-title">Uploaded</div>
                  </div>
                  <div class="uploaded-documents-list">
                    {{#if user.files}}
                      {{#each user.files}}
                      <div class="file-list-row">
                        <a href="/uploads/{{this.filename}}" class="file-list-item" target="_blank">
                          <div class="file-name">{{this.originalName}}</div>
                          <div class="file-date">{{formatDate this.uploadDate}}</div>
                          <div class="file-uploaded">{{formatDate this.uploadDate}}</div>
                        </a>
                        <button class="delete-file-btn" data-file-id="{{this._id}}">
                          <span class="delete-icon">×</span>
                        </button>
                      </div>
                      {{/each}}
                        {{else}}
                      <div class="no-files-message">No documents uploaded yet</div>
                      {{/if}}
                      </div>
                  </div>
                </div>
              </div>
              <div class="table-module">
                <div class="table-content"></div>
              </div>
            </div>

            <div data-w-tab="Output" class="tab-pane-ongoing w-tab-pane">
              <div class="dropdown-wrapper user-content-bg">
                <div class="div-block-9">
                  <div class="upload-page-text">Data from uploaded file(s)</div>
                  <div class="upload-page-text"><br>‍<br><br><br><br>
                  <br>‍<br></div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=6606de22e8c152e6b19be98a"
    type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
    crossorigin="anonymous"></script>
  <script src="js/main.js" type="text/javascript"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
  <script> // File uploader
    document.addEventListener('DOMContentLoaded', function () {
      const dropZone = document.getElementById('dropZone');
      const fileInput = document.getElementById('fileInput');
      const fileList = document.getElementById('fileList');
      const processButton = document.getElementById('processFiles');
      const files = new Set();

      // Handle click on browse button
      document.querySelector('.browse-button').addEventListener('click', (e) => {
        e.preventDefault();
        fileInput.click();
      });

      // Handle drag and drop
      dropZone.addEventListener('dragover', (e) => {
        e.preventDefault();
        dropZone.style.borderColor = '#2563eb';
        dropZone.style.backgroundColor = '#f1f5f9';
      });
      dropZone.addEventListener('dragleave', (e) => {
        e.preventDefault();
        dropZone.style.borderColor = '#3b82f6';
        dropZone.style.backgroundColor = '#f8fafc';
      });
      dropZone.addEventListener('drop', (e) => {
        e.preventDefault();
        dropZone.style.borderColor = '#3b82f6';
        dropZone.style.backgroundColor = '#f8fafc';
        handleFiles(e.dataTransfer.files);
      });
      // Handle file input change
      fileInput.addEventListener('change', (e) => {
        handleFiles(e.target.files);
      });

      // file handler function
      function handleFiles(fileList) {
        for (const file of fileList) {
          if (file.size > 200 * 1024 * 1024) { // 200MB limit
            alert(`File ${file.name} is too large. Maximum size is 200MB.`);
            continue;
          }

          if (!['application/pdf', 'image/jpeg', 'image/png'].includes(file.type)) {
            alert(`File ${file.name} is not supported. Please upload PDF, JPEG, or PNG files.`);
            continue;
          }

          files.add(file);
          displayFile(file);
        }
        updateProcessButton();
      }

      // display file function
      function displayFile(file) {
        const div = document.createElement('div'); // div element to display file info
        div.className = 'file-item'; // styling for div element
        // include the file name and a remove button
        div.innerHTML = `
          <span class="file-name">${file.name}</span>
          <button class="remove-file">Remove</button>
        `;
        // Add an event listener to the remove button to handle file removal
        div.querySelector('.remove-file').addEventListener('click', () => {
          files.delete(file); // Remove the file from the files collection
          div.remove(); // remove the corresponding div element
          updateProcessButton(); // update button state
        });
        fileList.appendChild(div); // append to a container element
      }

      function updateProcessButton() {
        processButton.disabled = files.size === 0;
      }

      // Handle process button click
      processButton.addEventListener('click', async () => {
        const formData = new FormData();
        files.forEach(file => {
          formData.append('files', file);
        });

        try {
          // Replace with your actual upload endpoint
          const response = await fetch('/upload-files', {
            method: 'POST',
            body: formData
          });

          if (response.ok) {
            alert('Files processed successfully!');
            // Clear the file list
            files.clear();
            fileList.innerHTML = '';
            updateProcessButton();
          } else {
            throw new Error('Upload failed');
          }
        } catch (error) {
          alert('Error processing files: ' + error.message);
        }
      });

       // Handle file deletions
      document.querySelectorAll('.delete-file-btn').forEach(button => {
        button.addEventListener('click', async function() {
          if (!confirm('Are you sure you want to delete this file?')) return;

          const fileId = this.dataset.fileId;
          try {
            const response = await fetch('/delete-file', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({ fileId })
            });

            if (response.ok) {
              // Remove the file row from the UI
              this.closest('.file-list-row').remove();
              
              // If no files left, show the no files message
              const filesList = document.querySelector('.uploaded-documents-list');
              if (!filesList.querySelector('.file-list-row')) {
                filesList.innerHTML = '<div class="no-files-message">No documents uploaded yet</div>';
              }
            } else {
              throw new Error('Failed to delete file');
            }
          } catch (error) {
            console.error('Error:', error);
            alert('Failed to delete file: ' + error.message);
          }
        });
      });
    });
  </script>
</body>

</html>